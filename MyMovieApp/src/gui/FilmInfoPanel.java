/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Desktop;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.FilmDatabase;
import model.MyFilmDatabase;

/**
 *
 * @author Farley Tran
 */
public class FilmInfoPanel extends javax.swing.JFrame
{

    /**
     * Creates new form MainFrame
     */
    public FilmInfoPanel(FilmDatabase fd, MyFilmDatabase mfd)
    {
        this.filmDatabase = fd;
        this.myFilmDatabase = mfd;
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        background = new javax.swing.JDesktopPane()
        {
            protected void paintComponent(Graphics grphcs)
            {
                super.paintComponent(grphcs);
                Image img = getImageIcon(filmDatabase.getBackground(),background.getWidth(), background.getHeight()).getImage();
                grphcs.drawImage(img, 0, 0, null);
            }
        };
        minimizeBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        filmNameLabel = new javax.swing.JLabel();
        filmNameTextField = new javax.swing.JTextField();
        blurayCheckBox = new javax.swing.JCheckBox();
        favoriteCheckBox = new javax.swing.JCheckBox();
        episodesTextField = new javax.swing.JTextField();
        episodesLabel = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        image1 = new javax.swing.JLabel();
        image3 = new javax.swing.JLabel();
        descriptionsLabel = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        watchBtn = new javax.swing.JButton();
        trailerBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        changeImage1 = new javax.swing.JButton();
        changeImage2 = new javax.swing.JButton();
        changeImage3 = new javax.swing.JButton();
        trailerLabel = new javax.swing.JLabel();
        removeFilmBtn = new javax.swing.JButton();
        changeBackgroundBtn = new javax.swing.JButton();
        seasonLabel = new javax.swing.JLabel();
        seasonCombox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        trailerLinkTextFiled = new javax.swing.JTextField();
        movieLocationLabel = new javax.swing.JLabel();
        movieLocationBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        backgroundLocationText = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        openLocationBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyMovieApp");
        setUndecorated(true);

        minimizeBtn.setBackground(new java.awt.Color(0, 0, 0));
        minimizeBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        minimizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        minimizeBtn.setText("Minimize");
        minimizeBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                minimizeBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(0, 0, 0));
        exitBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        exitBtn.setForeground(new java.awt.Color(255, 255, 255));
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitBtnActionPerformed(evt);
            }
        });

        filmNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        filmNameLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        filmNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        filmNameLabel.setText("Name:");

        filmNameTextField.setEditable(false);
        filmNameTextField.setFont(new java.awt.Font("Harrington", 0, 14)); // NOI18N
        filmNameTextField.setText(filmDatabase.getName());

        blurayCheckBox.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        blurayCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        blurayCheckBox.setSelected(filmDatabase.isBluray());
        blurayCheckBox.setText("Blu-ray");
        blurayCheckBox.setEnabled(false);

        favoriteCheckBox.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        favoriteCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        favoriteCheckBox.setSelected(filmDatabase.isFavorite());
        favoriteCheckBox.setText("Favorite");
        favoriteCheckBox.setEnabled(false);

        episodesTextField.setEditable(false);
        episodesTextField.setText(filmDatabase.getEpisodes());

        episodesLabel.setBackground(new java.awt.Color(0, 0, 0));
        episodesLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        episodesLabel.setForeground(new java.awt.Color(255, 255, 255));
        episodesLabel.setText("Episodes");

        image2.setIcon(getImageIcon(filmDatabase.getImage2(),270,400));

        image1.setIcon(getImageIcon(filmDatabase.getImage1(),270,400));

        image3.setIcon(getImageIcon(filmDatabase.getImage3(),270,400));

        descriptionsLabel.setBackground(new java.awt.Color(0, 0, 0));
        descriptionsLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        descriptionsLabel.setForeground(new java.awt.Color(255, 255, 255));
        descriptionsLabel.setText("Description:");

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backBtnActionPerformed(evt);
            }
        });

        watchBtn.setBackground(new java.awt.Color(0, 0, 0));
        watchBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        watchBtn.setForeground(new java.awt.Color(255, 255, 255));
        watchBtn.setText("Watch!");
        watchBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                watchBtnActionPerformed(evt);
            }
        });

        trailerBtn.setBackground(new java.awt.Color(0, 0, 0));
        trailerBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        trailerBtn.setForeground(new java.awt.Color(255, 255, 255));
        trailerBtn.setText("Trailer");
        trailerBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                trailerBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(0, 0, 0));
        saveBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setVisible(false);
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(0, 0, 0));
        editBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editBtnActionPerformed(evt);
            }
        });

        changeImage1.setBackground(new java.awt.Color(0, 0, 0));
        changeImage1.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        changeImage1.setForeground(new java.awt.Color(255, 255, 255));
        changeImage1.setText("Change image");
        changeImage1.setVisible(false);
        changeImage1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                changeImage1ActionPerformed(evt);
            }
        });

        changeImage2.setBackground(new java.awt.Color(0, 0, 0));
        changeImage2.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        changeImage2.setForeground(new java.awt.Color(255, 255, 255));
        changeImage2.setText("Change image");
        changeImage2.setVisible(false);
        changeImage2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                changeImage2ActionPerformed(evt);
            }
        });

        changeImage3.setBackground(new java.awt.Color(0, 0, 0));
        changeImage3.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        changeImage3.setForeground(new java.awt.Color(255, 255, 255));
        changeImage3.setText("Change image");
        changeImage3.setVisible(false);
        changeImage3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                changeImage3ActionPerformed(evt);
            }
        });

        trailerLabel.setBackground(new java.awt.Color(0, 0, 0));
        trailerLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        trailerLabel.setForeground(new java.awt.Color(255, 255, 255));
        trailerLabel.setText("Trailer Link");
        trailerLabel.setVisible(false);

        removeFilmBtn.setBackground(new java.awt.Color(0, 0, 0));
        removeFilmBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        removeFilmBtn.setForeground(new java.awt.Color(255, 255, 255));
        removeFilmBtn.setText("Remove Film");
        removeFilmBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                removeFilmBtnActionPerformed(evt);
            }
        });

        changeBackgroundBtn.setBackground(new java.awt.Color(0, 0, 0));
        changeBackgroundBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        changeBackgroundBtn.setForeground(new java.awt.Color(255, 255, 255));
        changeBackgroundBtn.setText("Change background");
        changeBackgroundBtn.setVisible(false);
        changeBackgroundBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                changeBackgroundBtnActionPerformed(evt);
            }
        });

        seasonLabel.setBackground(new java.awt.Color(0, 0, 0));
        seasonLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        seasonLabel.setForeground(new java.awt.Color(255, 255, 255));
        seasonLabel.setText("Season:");

        seasonCombox.setBackground(new java.awt.Color(0, 0, 0));
        seasonCombox.setForeground(new java.awt.Color(255, 255, 255));
        seasonCombox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        seasonCombox.setEnabled(false);

        trailerLinkTextFiled.setText(filmDatabase.getTrailerLink());
        trailerLinkTextFiled.setVisible(false);
        jScrollPane2.setViewportView(trailerLinkTextFiled);
        jScrollPane2.setVisible(false);

        movieLocationLabel.setBackground(new java.awt.Color(0, 0, 0));
        movieLocationLabel.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        movieLocationLabel.setForeground(new java.awt.Color(255, 255, 255));
        movieLocationLabel.setText("Movie Location");
        movieLocationLabel.setVisible(false);

        movieLocationBtn.setText(filmDatabase.getMovieLocation());
        movieLocationBtn.setVisible(false);
        movieLocationBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                movieLocationBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(0, 0, 0));
        cancelBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setVisible(false);
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelBtnActionPerformed(evt);
            }
        });

        backgroundLocationText.setText(filmDatabase.getBackground());
        backgroundLocationText.setVisible(false);

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setBackground(new java.awt.Color(102, 102, 102));
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        descriptionTextArea.setForeground(new java.awt.Color(255, 255, 255));
        descriptionTextArea.setRows(5);
        descriptionTextArea.setText(filmDatabase.getDescription());
        jScrollPane3.setViewportView(descriptionTextArea);

        openLocationBtn.setBackground(new java.awt.Color(0, 0, 0));
        openLocationBtn.setFont(new java.awt.Font("Harrington", 1, 18)); // NOI18N
        openLocationBtn.setForeground(new java.awt.Color(255, 255, 255));
        openLocationBtn.setText("OpenLocation");
        openLocationBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                openLocationBtnActionPerformed(evt);
            }
        });

        background.setLayer(minimizeBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(exitBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(filmNameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(filmNameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(blurayCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(favoriteCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(episodesTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(episodesLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(image2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(image1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(image3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(descriptionsLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(backBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(watchBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(trailerBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(saveBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(editBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(changeImage1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(changeImage2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(changeImage3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(trailerLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(removeFilmBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(changeBackgroundBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(seasonLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(seasonCombox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(movieLocationLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(movieLocationBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(cancelBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(backgroundLocationText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        background.setLayer(openLocationBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minimizeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelBtn)
                                .addGap(18, 18, 18)
                                .addComponent(editBtn)
                                .addGap(122, 122, 122))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(backgroundLayout.createSequentialGroup()
                                        .addGap(234, 234, 234)
                                        .addComponent(descriptionsLabel))
                                    .addGroup(backgroundLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(filmNameLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(filmNameTextField))
                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(trailerLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2))
                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(backgroundLayout.createSequentialGroup()
                                                        .addComponent(changeBackgroundBtn)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(backgroundLocationText))
                                                    .addGroup(backgroundLayout.createSequentialGroup()
                                                        .addComponent(watchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(trailerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(backgroundLayout.createSequentialGroup()
                                                        .addComponent(episodesLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(episodesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(backgroundLayout.createSequentialGroup()
                                                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(favoriteCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(blurayCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(309, 309, 309)
                                                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                                .addComponent(seasonLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(seasonCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(openLocationBtn))))
                                                .addGap(5, 5, 5))
                                            .addGroup(backgroundLayout.createSequentialGroup()
                                                .addComponent(movieLocationLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(movieLocationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)))
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(image1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeImage1))
                        .addGap(115, 115, 115)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(image2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeImage2))
                        .addGap(124, 124, 124)
                        .addComponent(image3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(changeImage3)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(removeFilmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backBtn, exitBtn, minimizeBtn});

        backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {image1, image2, image3});

        backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {trailerBtn, watchBtn});

        backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, saveBtn});

        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                        .addComponent(minimizeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(image2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(image1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(image3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeImage1)
                            .addComponent(changeImage2)
                            .addComponent(changeImage3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filmNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(filmNameTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(favoriteCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(blurayCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(episodesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(episodesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(watchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(trailerBtn)))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(seasonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seasonCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(openLocationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeBackgroundBtn)
                            .addComponent(backgroundLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(trailerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(movieLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(movieLocationBtn))
                                .addGap(26, 26, 26))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBtn)
                            .addComponent(editBtn)
                            .addComponent(cancelBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeFilmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backBtn, exitBtn, minimizeBtn});

        backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {image1, image2, image3});

        backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {openLocationBtn, trailerBtn, watchBtn});

        backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelBtn, saveBtn});

        backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backgroundLocationText, jScrollPane2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getImagePath()
    {
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new ImageFileFilter());
        jfc.showOpenDialog(jfc);
        File f = jfc.getSelectedFile();
        String path = f.toPath().toString().replace('\\', '/');
        return path;
    }

    private ImageIcon getImageIcon(String path, int widthImg,
            int heightImg)
    {
        if (path.equals(filmDatabase.getBackground()))
        {
            Image image = null;
            try
            {
                image = ImageIO.read(new File(path));
            } catch (IOException ex)
            {
            }
            if (image == null)
            {
                path = "src/data/filmDatabase/background.png";
            }
        }
        ImageIcon dabIcon = new ImageIcon(path);
        Image dabImage = dabIcon.getImage();
        Image modDabImage = dabImage.getScaledInstance(widthImg,
                heightImg, widthImg);
        return new ImageIcon(modDabImage);
    }
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitBtnActionPerformed
    {//GEN-HEADEREND:event_exitBtnActionPerformed
        myFilmDatabase.saveData();
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void minimizeBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_minimizeBtnActionPerformed
    {//GEN-HEADEREND:event_minimizeBtnActionPerformed
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_editBtnActionPerformed
    {//GEN-HEADEREND:event_editBtnActionPerformed
        filmDatabaseTemp = new FilmDatabase(filmDatabase);
        filmNameTextField.setEditable(true);
        favoriteCheckBox.setEnabled(true);
        blurayCheckBox.setEnabled(true);
        episodesTextField.setEditable(true);
        changeBackgroundBtn.setVisible(true);
        changeImage1.setVisible(true);
        changeImage2.setVisible(true);
        changeImage3.setVisible(true);
        descriptionTextArea.setEditable(true);
        trailerLinkTextFiled.setVisible(true);
        jScrollPane2.setVisible(true);
        trailerLabel.setVisible(true);
        movieLocationLabel.setVisible(true);
        movieLocationBtn.setVisible(true);
        backgroundLocationText.setVisible(true);
        saveBtn.setVisible(true);
        cancelBtn.setVisible(true);
        seasonCombox.setEnabled(true);

    }//GEN-LAST:event_editBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveBtnActionPerformed
    {//GEN-HEADEREND:event_saveBtnActionPerformed
        filmNameTextField.setEditable(false);
        favoriteCheckBox.setEnabled(false);
        blurayCheckBox.setEnabled(false);
        episodesTextField.setEditable(false);
        changeBackgroundBtn.setVisible(false);
        changeImage1.setVisible(false);
        changeImage2.setVisible(false);
        changeImage3.setVisible(false);
        descriptionTextArea.setEditable(false);
        trailerLinkTextFiled.setVisible(false);
        jScrollPane2.setVisible(false);
        trailerLabel.setVisible(false);
        movieLocationLabel.setVisible(false);
        movieLocationBtn.setVisible(false);
        backgroundLocationText.setVisible(false);
        saveBtn.setVisible(false);
        cancelBtn.setVisible(false);
        seasonCombox.setEnabled(false);
        filmDatabase.setName(filmNameTextField.getText());
        filmDatabase.setFavorite(favoriteCheckBox.isSelected());
        filmDatabase.setBluray(blurayCheckBox.isSelected());
        filmDatabase.setEpisodes(episodesTextField.getText());
        filmDatabase.setTrailerLink(trailerLinkTextFiled.getText());
        filmDatabase.setDescription(descriptionTextArea.getText());
        filmDatabase.setMovieLocation(movieLocationBtn.getText());
        filmDatabase.setSeason(seasonCombox.getSelectedIndex());
        myFilmDatabase.changeMovieInfo(filmDatabase);
        JOptionPane.showMessageDialog(this, "Save completed",
                "Successful save!!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void changeImage1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_changeImage1ActionPerformed
    {//GEN-HEADEREND:event_changeImage1ActionPerformed
        String imagePath = getImagePath();
        filmDatabase.setImage1(imagePath);
        image1.setIcon(getImageIcon(filmDatabase.getImage1(), 270, 400));
    }//GEN-LAST:event_changeImage1ActionPerformed

    private void changeImage2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_changeImage2ActionPerformed
    {//GEN-HEADEREND:event_changeImage2ActionPerformed
        String imagePath = getImagePath();
        filmDatabase.setImage2(imagePath);
        image2.setIcon(getImageIcon(filmDatabase.getImage2(), 270, 400));
    }//GEN-LAST:event_changeImage2ActionPerformed

    private void changeImage3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_changeImage3ActionPerformed
    {//GEN-HEADEREND:event_changeImage3ActionPerformed
        String imagePath = getImagePath();
        filmDatabase.setImage3(imagePath);
        image3.setIcon(getImageIcon(filmDatabase.getImage3(), 270, 400));
    }//GEN-LAST:event_changeImage3ActionPerformed

    private void movieLocationBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_movieLocationBtnActionPerformed
    {//GEN-HEADEREND:event_movieLocationBtnActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.showOpenDialog(jfc);
        File f = jfc.getSelectedFile();
        String moviePath = f.toString().replace('\\', '/') + "/";
        filmDatabaseTemp.setMovieLocation(moviePath);
        movieLocationBtn.setText(moviePath);
    }//GEN-LAST:event_movieLocationBtnActionPerformed
    public void setLinkLayer(LinkLayer link)
    {
        this.link = link;
    }
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backBtnActionPerformed
    {//GEN-HEADEREND:event_backBtnActionPerformed
        
        link.setHomeVisiable(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void changeBackgroundBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_changeBackgroundBtnActionPerformed
    {//GEN-HEADEREND:event_changeBackgroundBtnActionPerformed
        String imagePath = getImagePath();
        filmDatabase.setBackground(imagePath);
        backgroundLocationText.setText(imagePath);
        background.repaint();
        filmDatabase.setBackground(imagePath);
    }//GEN-LAST:event_changeBackgroundBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelBtnActionPerformed
    {//GEN-HEADEREND:event_cancelBtnActionPerformed
        filmDatabase = filmDatabaseTemp;
        filmNameTextField.setEditable(false);
        favoriteCheckBox.setEnabled(false);
        blurayCheckBox.setEnabled(false);
        episodesTextField.setEditable(false);
        changeBackgroundBtn.setVisible(false);
        changeImage1.setVisible(false);
        changeImage2.setVisible(false);
        changeImage3.setVisible(false);
        descriptionTextArea.setEditable(false);
        trailerLinkTextFiled.setVisible(false);
        jScrollPane2.setVisible(false);
        trailerLabel.setVisible(false);
        movieLocationLabel.setVisible(false);
        movieLocationBtn.setVisible(false);
        backgroundLocationText.setVisible(false);
        saveBtn.setVisible(false);
        cancelBtn.setVisible(false);
        seasonCombox.setEnabled(false);
        filmNameTextField.setText(filmDatabase.getName());
        blurayCheckBox.setSelected(filmDatabase.isBluray());
        favoriteCheckBox.setSelected(filmDatabase.isFavorite());
        episodesTextField.setText(filmDatabase.getEpisodes());
        seasonCombox.setSelectedIndex(filmDatabase.getSeason());
        descriptionTextArea.setText(filmDatabase.getDescription());
        movieLocationBtn.setText(filmDatabase.getMovieLocation());
        backgroundLocationText.setText(filmDatabase.getBackground());
        image2.setIcon(getImageIcon(filmDatabase.getImage2(), 270, 400));
        image1.setIcon(getImageIcon(filmDatabase.getImage1(), 270, 400));
        image3.setIcon(getImageIcon(filmDatabase.getImage3(), 270, 400));
        background.repaint();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void removeFilmBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_removeFilmBtnActionPerformed
    {//GEN-HEADEREND:event_removeFilmBtnActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "Do you want to removie"
                + "this movie", "REMOVE MOVIE", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION)
        {
            myFilmDatabase.removeMovie(filmDatabase.getFilmID());
            if(link!=null)
            {
                link.checkBox(filmDatabase);
                link.setHomeVisiable(true);
            }
            this.setVisible(false);

        }
    }//GEN-LAST:event_removeFilmBtnActionPerformed

    private void trailerBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_trailerBtnActionPerformed
    {//GEN-HEADEREND:event_trailerBtnActionPerformed
        try
        {
            Desktop.getDesktop().browse(new URI(trailerLinkTextFiled.getText()));
        } catch (URISyntaxException ex)
        {
            Logger.getLogger(FilmInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex)
        {
            Logger.getLogger(FilmInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_trailerBtnActionPerformed

    private void watchBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_watchBtnActionPerformed
    {//GEN-HEADEREND:event_watchBtnActionPerformed
        File[] listOfFiles = new File(movieLocationBtn.getText()).listFiles();
        for (int i = 0; i < listOfFiles.length; i++)
        {
            if (!listOfFiles[i].getName().endsWith(".png"))
            {
                try
                {
                    Desktop.getDesktop().open(listOfFiles[i]);
                } catch (IOException ex)
                {
                    continue;
                }
                break;
            }
        }

    }//GEN-LAST:event_watchBtnActionPerformed

    private void openLocationBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_openLocationBtnActionPerformed
    {//GEN-HEADEREND:event_openLocationBtnActionPerformed
        try
        {
            Desktop.getDesktop().open(new File(movieLocationBtn.getText()));
        } catch (IOException ex)
        {

        }
    }//GEN-LAST:event_openLocationBtnActionPerformed
    private LinkLayer link;
    private MyFilmDatabase myFilmDatabase;
    private FilmDatabase filmDatabase;
    private FilmDatabase filmDatabaseTemp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JDesktopPane background;
    private javax.swing.JTextField backgroundLocationText;
    private javax.swing.JCheckBox blurayCheckBox;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton changeBackgroundBtn;
    private javax.swing.JButton changeImage1;
    private javax.swing.JButton changeImage2;
    private javax.swing.JButton changeImage3;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel descriptionsLabel;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel episodesLabel;
    private javax.swing.JTextField episodesTextField;
    private javax.swing.JButton exitBtn;
    private javax.swing.JCheckBox favoriteCheckBox;
    private javax.swing.JLabel filmNameLabel;
    private javax.swing.JTextField filmNameTextField;
    private javax.swing.JLabel image1;
    private javax.swing.JLabel image2;
    private javax.swing.JLabel image3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton minimizeBtn;
    private javax.swing.JButton movieLocationBtn;
    private javax.swing.JLabel movieLocationLabel;
    private javax.swing.JButton openLocationBtn;
    private javax.swing.JButton removeFilmBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox<String> seasonCombox;
    private javax.swing.JLabel seasonLabel;
    private javax.swing.JButton trailerBtn;
    private javax.swing.JLabel trailerLabel;
    private javax.swing.JTextField trailerLinkTextFiled;
    private javax.swing.JButton watchBtn;
    // End of variables declaration//GEN-END:variables
}
